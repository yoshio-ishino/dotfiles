#===================<key-bind>==================
#プレフィックスキー@2018/03/11
set -g prefix C-t
#設定ファイルを再読み込み
bind r source-file ~/.tmux.conf \; display "Reloaded!"

#------------- copy_mode(Like-vim) ----------
# Use vim keybindings in copy mode
setw -g mode-keys vi

#-------------------- pain ------------------
# 分割
bind w split-window -h # 縦
bind e split-window -v # 横

# 移動(vim風)
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# synchronize-panes
bind n setw synchronize-panes on
bind N setw synchronize-panes off

#===================</key-bind>==================

#=================<tmux-powerline>================
set -g status-position top
set-option -g status off # Change at 2020/01/28
set-option -g status-interval 2
set-option -g status-justify "left"
set-option -g status-left-length 100
set-option -g status-right-length 120
set-option -g status-left "#(~/dotfiles/others/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/dotfiles/others/tmux-powerline/powerline.sh right)"
set-window-option -g window-status-current-format "#[fg=colour235, bg=colour255]⮀#[fg=colour235, bg=colour255] #I ❯ #W #[fg=colour235, bg=colour255]"
set -g default-terminal "screen-256color"

# ステータスバーの色を設定する
set -g status-bg "colour235"
set-option -g status-fg "colour255"
#=================</tmux-powerline>================

# tmuxは起動時に、環境変数をグローバル環境変数に格納する。
# かつ、セッションごとにも環境変数を持っている。
# なので新しいウインドウを作る時にグローバル環境変数をマージして子プロセスに渡す。
# tmux show-environment で確認可能。
set -g update-environment "SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION"


# マウス操作を有効にする
set -g mouse on

# C-bのキーバインドを解除する
unbind C-b

# キーストロークのディレイを減らす
set -sg escape-time 1

# ウィンドウのインデックスを1から始める
set -g base-index 1

# ペインのインデックスを1から始める
set -g pane-base-index 1

# C-a*2でtmux内のプログラムにC-aを送る
bind C-a send-prefix

# Ubuntu
set-option -g default-shell /bin/bash
set-option -g default-command /bin/bash

#=================<Sharing clipbord>================
# Mac Specific Settings:
if-shell "uname -a | grep Darwin" '\
  bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" \
  bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" \
  bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer" \
'

# Ubuntu Specific Settings:
if-shell 'type xsel' "bind-key -T copy-mode-vi v send-keys -X begin-selection"
if-shell 'type xsel' "bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xsel -ib'" 
if-shell 'type xsel' "bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xsel -ib'"
if-shell 'type xsel' "bind ] run 'xsel -ib | tmux load-buffer - && tmux paste-buffer'"

# WSL Specific Settings:

if-shell "uname -a | grep Microsoft" '\
  bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "clip.exe"; \
  bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "clip.exe"; \
  bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "clip.exe"\
'
